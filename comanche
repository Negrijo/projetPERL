#!/usr/bin/perl

use Socket;

my %icecream;
my $client = 0;

my $meth = "HTTP/1.1 200 OK \r\n"."Content-type: Text/HTML\r\n"."\r\n";
my $debutHTML = "<!DOCTYPE HTML>\n"."<html>\n"."<head>\n"."</head>\n"."<body>\n"."<h1>Comanche</h1>\n";
my $finHTML = "</body>\n"."</html>\n";

if(@ARGV){
	if ($ARGV[0] eq "start"){
			#lecture des arguments dans comanche
			open(CONF, "comanche.conf") || die("Ouverture de comanche.conf impossible !\n");
			while(<CONF>){
				unless(/^\s*[;\$#]|^$/){
					chop;
					@banana = split(/\s+/);
					$icecream{$banana[1]} = $banana[$#banana];
				}	
			}
			$port = $icecream{"port"};
			$error = $icecream{"error"};
			$index = $icecream{"index"};
			$clients = $icecream{"clients"};
			$logfile = $icecream{"logfile"};
			#manque la route de projection je ne sais pas encore quoi en faire
			#Affichage pour le test
			#print "$port \n $error \n $index \n $clients \n $logfile \n";


			############################################################################################
			$pid = fork();
			if($pid == 0){
				
				#Création de la socket
				socket(SERVEUR, PF_INET, SOCK_STREAM, getprotobyname('tcp'));
				setsockopt(SERVEUR, SOL_SOCKET, SO_REUSEADDR, 1);
				$mon_adresse = sockaddr_in ($port, INADDR_ANY);
				##############
				bind(SERVEUR,$mon_adresse) or die ("Erreur bind");
				listen(SERVEUR,$clients) or die ("Erreur listen");

				#print $mon_adresse;
				print "2-Demarrage du serveur\n";

				print "flag\n";
				accept(CLIENT, SERVEUR) or die ("Accept impossible");
					#$clients++;

				print "flag3\n";

				$worker = fork();

				print "$worker\n";

				if($worker == 0){
					print "flag2\n";
					print "Je suis dans le worker\n";
					$request=<CLIENT>;
					while(<CLIENT> =~ /^\r?\n/){}
						print "dans le while";
						$request =~ /(?-i)GET(?i)\s(\/(?:.*))\sHTTP\/1\.1/;
						$request = $1;

						print $request;

						$peer = getpeername CLIENT;
						($pcli, $iaddr) = sockaddr_in($peer);
						$ip = inet_ntoa($iaddr);

						print CLIENT $meth.$debutHTML."<html>Hello</html>".$finHTML;
						
					}

				}	
				else{
					print"1-Sauvegarde du pid\n";
					open(PROC, ">procfils") || die("Impossible d'ouvrir le fichier -> procfils <-");
					print PROC $pid;
					close(PROC);
				}

			############################################################################################

		}

		elsif ($ARGV[0] eq "stop"){
			print "Arrêt du serveur\n";
			close(SERVEUR) or die ("Fermeture du serveur impossible\n");
			print "flag stop\n";
			exit 1;
			print "invisible\n";
		}
		
		elsif($ARGV[0] eq "status"){
			print "Voici les informations :\n";

		}
		else{
			die("Erreur d'argument => start ou stop ou status\n")
		}
	}
	else{
		die("Usage => comanche arg\n")
	}